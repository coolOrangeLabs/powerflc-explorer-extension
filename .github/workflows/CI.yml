# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    env:
      Solution_Name: Files\Extensions\powerFLC.ExplorerExtension.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      #Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      #Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      #Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.
      Configuration: Release
      Major: 1
      Minor: 0
      Build: "${{ github.run_number }}"
      Revision: 0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64
      
      - name: Build the Vault 2022 solution
        run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=Vault2022 /p:Major=$env:Major /p:Minor=$env:Minor /p:Build=$env:Build /p:Revision=$env:Revision /p:RunWixToolsOutofProc=true
        
      - name: Build the Vault 2021 solution
        run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=Vault2021 /p:Major=$env:Major /p:Minor=$env:Minor /p:Build=$env:Build /p:Revision=$env:Revision /p:RunWixToolsOutofProc=true
      
      - name: Build the Vault 2020 solution
        run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=Vault2020 /p:Major=$env:Major /p:Minor=$env:Minor /p:Build=$env:Build /p:Revision=$env:Revision /p:RunWixToolsOutofProc=true
      
      - name: Build the Vault 2019 solution
        run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=Vault2019 /p:Major=$env:Major /p:Minor=$env:Minor /p:Build=$env:Build /p:Revision=$env:Revision /p:RunWixToolsOutofProc=true
        
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: MSIX Package
          path: Files\Extensions\bin\**\*.msi
      
      - name: Automatic Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
      
      # Upload release asset:
      - name: Upload Multiple Assets to a Release
        # You may pin to the exact commit or the version.
        # uses: dwenegar/upload-release-assets@5bc3024cf83521df8ebfadf00ad0c4614fd59148
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The id of the release to upload the assets to
          release_id: ${{ steps.create_release.outputs.id }}
          # The path to the assets you want to upload
          assets_path: Files\Extensions\bin\Release\en-us\*.msi
          
